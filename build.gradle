plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id "com.adarshr.test-logger" version "4.0.0"
}

ext {
    junit_version = "5.10.2"
}
repositories {
    mavenLocal()
    mavenCentral()
    maven {url "https://plugins.gradle.org/m2/"}
}

dependencies {
    testImplementation (
            "org.junit.jupiter:junit-jupiter:${junit_version}",
            "org.junit.jupiter:junit-jupiter-params:${junit_version}"
    )
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {

    description = "Executa testes. Para executar tags especÃ­ficas, use: gradle clean test -Dtag=tagname."
    testLogging.showStandardStreams = true
    String tag = System.properties.getProperty("tag")

    systemProperties = [
            'junit.jupiter.extensions.autodetection.enabled': 'true'
    ]
    useJUnitPlatform(){
        if (null != tag && !tag.equalsIgnoreCase("")) includeTags String.valueOf(tag)
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }

    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

testlogger {
    theme 'mocha'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showOnlySlow false
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
    logLevel 'lifecycle'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}